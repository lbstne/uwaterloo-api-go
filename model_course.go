/*
 * Waterloo OpenData API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: v3
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

// An academic Course at Waterloo, a Course can be scheduled to become a Class
type Course struct {
	// Course Id that identifies this Course, not unique across terms
	CourseId string `json:"courseId,omitempty"`
	// Course Offer Number identifies cross-listed and similar Courses that shared a Course Id in a Term
	CourseOfferNumber int32 `json:"courseOfferNumber,omitempty"`
	// Waterloo Term code for which this Course data applies
	TermCode string `json:"termCode,omitempty"`
	// Waterloo Term name for which this Course data applies
	TermName string `json:"termName,omitempty"`
	// Academic Career code associated with Course
	AssociatedAcademicCareer string `json:"associatedAcademicCareer,omitempty"`
	// The Academic Group code that is assocaited to this Course
	AssociatedAcademicGroupCode string `json:"associatedAcademicGroupCode,omitempty"`
	// The Academic Organization code that is associated to this Course
	AssociatedAcademicOrgCode string `json:"associatedAcademicOrgCode,omitempty"`
	// The Subject code for this Course
	SubjectCode string `json:"subjectCode,omitempty"`
	// The Catalog Number for this Course
	CatalogNumber string `json:"catalogNumber,omitempty"`
	// Course title, full name of course
	Title string `json:"title,omitempty"`
	// Short description of the course, often an abbreviation of the title
	DescriptionAbbreviated string `json:"descriptionAbbreviated,omitempty"`
	// Description of the Course content and topics
	Description string `json:"description,omitempty"`
	// Code to describe the grading basis for this course, can be overriden at Class level
	GradingBasis string `json:"gradingBasis,omitempty"`
	// Course Component Code that describes if the course is a lecture, tutorial, etc.
	CourseComponentCode string `json:"courseComponentCode,omitempty"`
	// Code describing whether No, Instructor, or Department consent to enroll is required. Can be overwridden at Class level.
	EnrollConsentCode string `json:"enrollConsentCode,omitempty"`
	// Description of the enroll requirement. Can be overwridden at Class level.
	EnrollConsentDescription string `json:"enrollConsentDescription,omitempty"`
	// Code describing whether No, Instructor, or Department consent to drop is required. Can be overwridden at Class level.
	DropConsentCode string `json:"dropConsentCode,omitempty"`
	// Description of the drop requirement. Can be overwridden at Class level.
	DropConsentDescription string `json:"dropConsentDescription,omitempty"`
	// Description of the Course requirements, such as pre-requisites, anti-requisites, and co-requisites
	RequirementsDescription string `json:"requirementsDescription,omitempty"`
}
